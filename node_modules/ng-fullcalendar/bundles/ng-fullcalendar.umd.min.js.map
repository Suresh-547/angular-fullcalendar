{"version":3,"file":"ng-fullcalendar.umd.min.js","sources":["../../out-tsc/lib/src/lib/customEvent.ts","../../out-tsc/lib/src/calendar.component.ts","../../out-tsc/lib/src/module.ts","../../out-tsc/lib/src/models/buttonClickModel.ts","../../out-tsc/lib/src/models/updateEventModel.ts"],"sourcesContent":["interface Window {\n    CustomEvent: CustomEvent;\n}\n\n(function () {\n/**\n * @param {?} event\n * @param {?} params\n * @return {?}\n */\nfunction CustomEvent ( event: any, params: any ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined };\n    var /** @type {?} */ evt:CustomEvent = /** @type {?} */(( <any>document.createEvent( 'CustomEvent' )));\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n    return evt;\n   };\n\n  CustomEvent.prototype = Event.prototype;\n\n  window.CustomEvent = /** @type {?} */(( <any>CustomEvent));\n})();","import { Component, Input, Output, OnInit, NgZone, AfterViewInit, HostListener, AfterContentChecked, AfterViewChecked, ElementRef, EventEmitter } from '@angular/core';\nimport $ from 'jquery';\nimport'fullcalendar';\nimport { Options } from 'fullcalendar';\nimport'./lib/customEvent';\nimport { ButtonClickModel } from './models/buttonClickModel';\nimport { UpdateEventModel } from './models/updateEventModel';\nimport { RenderEventModel } from './models/renderEventModel';\nexport class CalendarComponent implements OnInit, AfterViewInit, AfterContentChecked, AfterViewChecked {\n     options: Options;\n     eventDrop = new EventEmitter<any>();\n     eventResize = new EventEmitter<any>();\n     eventClick = new EventEmitter<any>();\n     clickButton = new EventEmitter<any>();\n     windowResize = new EventEmitter<any>();\n     viewRender = new EventEmitter<any>();\n     viewDestroy = new EventEmitter<any>();\n     eventRender = new EventEmitter<any>();\n     initialized = new EventEmitter<any>();\n/**\n * @param {?} element\n * @param {?} zone\n */\nconstructor(private element: ElementRef,\nprivate zone: NgZone) {\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        setTimeout(() => {\n            this.updaterOptions();\n            this.zone.runOutsideAngular(() => {\n                $('ng-fullcalendar').fullCalendar(this.options);\n                this.initialized.emit(true);\n                // Click listeners\n                let /** @type {?} */ elem = document.getElementsByTagName('ng-fullcalendar');\n\n                $('[class ^=\"fc\"][class *=\"button\"]').click(el => {\n                    let /** @type {?} */ classnames = el.currentTarget.className.split(' ');\n                    classnames.forEach(name => {\n                        if (name.indexOf('button') == name.length - 6) {\n                            name = name.replace(/fc|button|-/g, '');\n                            if (name != '') {\n                                eventDispatch(name);\n                            }\n                        }\n                    });\n                });\n/**\n * @param {?} buttonType\n * @return {?}\n */\nfunction eventDispatch(buttonType: string) {\n                    let /** @type {?} */ data = $('ng-fullcalendar').fullCalendar('getDate');\n                    let /** @type {?} */ currentDetail: ButtonClickModel = {\n                        buttonType: buttonType,\n                        data: data\n                    };\n                    var /** @type {?} */ widgetEvent = new CustomEvent('clickButton', {\n                        bubbles: true,\n                        detail: currentDetail\n                    });\n                    elem[0].dispatchEvent(widgetEvent);\n                }\n            });\n        }, 100);\n\n    }\n/**\n * @return {?}\n */\nngAfterContentChecked() {\n    }\n/**\n * @return {?}\n */\nngAfterViewChecked() {\n    }\n/**\n * @return {?}\n */\nupdaterOptions() {\n        let /** @type {?} */ elem = document.getElementsByTagName('ng-fullcalendar');\n        this.options.eventDrop = function (event, duration) {\n            let /** @type {?} */ detail: UpdateEventModel = { event: event, duration: duration };\n            var /** @type {?} */ widgetEvent = new CustomEvent('eventDrop', {\n                bubbles: true,\n                detail: detail\n            });\n            elem[0].dispatchEvent(widgetEvent);\n        };\n        this.options.eventResize = function (event, duration) {\n            let /** @type {?} */ detail: UpdateEventModel = { event: event, duration: duration };\n            var /** @type {?} */ widgetEvent = new CustomEvent('eventResize', {\n                bubbles: true,\n                detail: detail\n            });\n            elem[0].dispatchEvent(widgetEvent);\n        };\n        this.options.eventRender = function (event, element) {\n            let /** @type {?} */ detail: RenderEventModel = { event: event, element: element };\n            var /** @type {?} */ widgetEvent = new CustomEvent('eventRender', {\n                bubbles: true,\n                detail: detail\n            });\n            elem[0].dispatchEvent(widgetEvent);\n        };\n        this.options.eventClick = function (event) {\n            let /** @type {?} */ detail: UpdateEventModel = { event: event, duration: null };\n            var /** @type {?} */ widgetEvent = new CustomEvent('eventClick', {\n                bubbles: true,\n                detail: detail\n            });\n            elem[0].dispatchEvent(widgetEvent);\n        };\n        this.options.windowResize = function (view) {\n            let /** @type {?} */ detail = { view: view };\n            var /** @type {?} */ widgetEvent = new CustomEvent('windowResize', {\n                bubbles: true,\n                detail: detail\n            });\n            elem[0].dispatchEvent(widgetEvent);\n        };\n        this.options.viewRender = function (view, element) {\n            let /** @type {?} */ detail = { view: view, element: element };\n            var /** @type {?} */ widgetEvent = new CustomEvent('viewRender', {\n                bubbles: true,\n                detail: detail\n            });\n            elem[0].dispatchEvent(widgetEvent);\n        };\n        this.options.viewDestroy = function (view, element) {\n            let /** @type {?} */ detail = { view: view, element: element };\n            var /** @type {?} */ widgetEvent = new CustomEvent('viewDestroy', {\n                bubbles: true,\n                detail: detail\n            });\n            elem[0].dispatchEvent(widgetEvent);\n        };\n    }\n/**\n * @param {...?} args\n * @return {?}\n */\nfullCalendar(...args: any[]) {\n        if (!args) {\n            return;\n        }\n        switch (args.length) {\n            case 0:\n                return;\n            case 1:\n                return $(this.element.nativeElement).fullCalendar(args[0]);\n            case 2:\n                return $(this.element.nativeElement).fullCalendar(args[0], args[1]);\n            case 3:\n                return $(this.element.nativeElement).fullCalendar(args[0], args[1], args[2]);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nupdateEvent(event: any) {\n        return $(this.element.nativeElement).fullCalendar('updateEvent', event);\n    }\n/**\n * @param {?} idOrFilter\n * @return {?}\n */\nclientEvents(idOrFilter: any): any {\n        return $(this.element.nativeElement).fullCalendar('clientEvents', idOrFilter);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ng-fullcalendar',\n    template: '<div id=\"calendar\"></div>',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'eventDrop': [{ type: Output },],\n'eventResize': [{ type: Output },],\n'eventClick': [{ type: Output },],\n'clickButton': [{ type: Output },],\n'windowResize': [{ type: Output },],\n'viewRender': [{ type: Output },],\n'viewDestroy': [{ type: Output },],\n'eventRender': [{ type: Output },],\n'initialized': [{ type: Output },],\n};\n}\n\nfunction CalendarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCalendarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCalendarComponent.ctorParameters;\n/** @type {?} */\nCalendarComponent.propDecorators;\n/** @type {?} */\nCalendarComponent.prototype.options;\n/** @type {?} */\nCalendarComponent.prototype.eventDrop;\n/** @type {?} */\nCalendarComponent.prototype.eventResize;\n/** @type {?} */\nCalendarComponent.prototype.eventClick;\n/** @type {?} */\nCalendarComponent.prototype.clickButton;\n/** @type {?} */\nCalendarComponent.prototype.windowResize;\n/** @type {?} */\nCalendarComponent.prototype.viewRender;\n/** @type {?} */\nCalendarComponent.prototype.viewDestroy;\n/** @type {?} */\nCalendarComponent.prototype.eventRender;\n/** @type {?} */\nCalendarComponent.prototype.initialized;\n/** @type {?} */\nCalendarComponent.prototype.element;\n/** @type {?} */\nCalendarComponent.prototype.zone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CalendarComponent } from './calendar.component';\nexport class FullCalendarModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [CalendarComponent],\n    exports: [CalendarComponent],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FullCalendarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFullCalendarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFullCalendarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ButtonClickModel {\n    buttonType: string;\n    data: any;\n}\n\nfunction ButtonClickModel_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonClickModel.prototype.buttonType;\n/** @type {?} */\nButtonClickModel.prototype.data;\n}\n\n","\nexport class UpdateEventModel {\n    event: any;\n    duration: any;\n}\n\nfunction UpdateEventModel_tsickle_Closure_declarations() {\n/** @type {?} */\nUpdateEventModel.prototype.event;\n/** @type {?} */\nUpdateEventModel.prototype.duration;\n}\n\n"],"names":["event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","CustomEvent","prototype","Event","window","element","zone","this","EventEmitter","CalendarComponent","setTimeout","_this","updaterOptions","runOutsideAngular","$","fullCalendar","options","initialized","emit","elem","getElementsByTagName","click","el","currentTarget","className","split","forEach","name","indexOf","length","replace","buttonType","currentDetail","data","widgetEvent","dispatchEvent","eventDispatch","eventDrop","duration","eventResize","eventRender","eventClick","windowResize","view","viewRender","viewDestroy","_i","args","nativeElement","idOrFilter","type","Component","selector","template","ElementRef","NgZone","Input","Output","clickButton","NgModule","declarations","exports","FullCalendarModule"],"mappings":"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"}